<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[如何在github上创建个人博客]]></title>
    <url>%2F2018%2F08%2F01%2F%E5%A6%82%E4%BD%95%E5%9C%A8github%E4%B8%8A%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[因缘巧合之下看到有人利用博客记录每天的学习笔记，觉得这也不失为一个学习提升自己的好方式，希望能借此激励自己每天持续学习和思考。于是看了很多网上的教程做准备，进行第一次搭建个人博客，写下本文总结搭建的过程以及遇到的一些问题。 本文主要目的是快速搭建，适合那些只是用来记录一些东西，不想做太多折腾的小白。 一、前言先说下自己搭建博客的大致流程： 登录GitHub，创建仓库。 在pc上安装Git，node.js，Hexo环境。 博客配置和主题优化（按需配置）。 绑定自己的域名（可选）。 二、准备工作1. 创建GitHub仓库 登录GitHub账号（注册请自己查找网上教程），右上角用户头像处选择your repositories点击new创建一个仓库，注意：仓库名的格式，必须是yourusername.github.io； 2. Git安装与配置2.1 Git安装Windows：git-for-windows下载完成后，具体安装过程见Git 中文详细安装教程 这里推荐一个神器：cmder，功能强大，比windows自带的cmd好用很多。（注：cmder最好解压放在磁盘的根目录下） 2.2 Git配置Git安装完成后，打开Git Bash，第一次打开需要设置username和email；git config --global user.name &quot;YiYunC&quot; #与注册的账号邮箱一致；git config --global user.email &quot;chenyiyun940920@gmail.com&quot; 在F盘新建一个名为blog的文件夹作为仓库，在命令行里输入：cd /f/blog #进入F盘的blog文件夹；git init #初始化当前文件夹作为本地仓库（生成.git文件夹）; 2.3 配置SSH keys先检查下电脑用户主目录下，有没有.ssh文件夹，看看有没有id_rsa和id_rsa.pub，有的话直接跳到下一步。如果没有，在Git Bash里输入命令，生成新的SSH Key:ssh-keygen -t rsa -C &quot;chenyiyun940920@gmail.com&quot;Generating public/private rsa key pair.Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):&lt;回车就好&gt;接下来就是设置加密密码串（6位），可以不设置。ssh key设置成功的界面忘记截图了。上述步骤以及添加SSH Key到GitHub的步骤详见利用Github免费搭建个人主页(个人博客) 3.Node.js安装到Nodejs官网下载，默认安装即可。 4.Hexo安装与配置4.1 Hexo安装npm install -g hexo-cli 4.2 Hexo配置cd /f/bloghexo init bloghexo g #启动本地服务器hexo s #在浏览器输入http://localhost:4000/就可以看见网页和模板了注意：进入http://localhost:4000/页面前，Git Bash里不要按下ctrl+c和ctrl+v，不然该页面将停止加载。 三、博客配置和主题优化1. 博客配置用文本编辑器打开blog根目录下的_config.yml文件，我自己用的是Notepad++，其实用Sublime Text会更好，因为Sublime Text默认打开格式是UTF-8编码，而Notepad++还需要手动设置；一般博客中文出现乱码，大多数是因为配置文件的格式不是URF-8编码。 打开之后，必须要改的有：注：每个：后面必须有一个空格；还有language的设定是由主题决定，后面会讲解。 url填写的地址在GitHub里刚才新建的仓库里，点击setting，拉到下面可以看见GitHub Pages里有域名地址，一般默认是GitHub提供的二级域名github.io，这里我已经更换了.me域名。 最后这里的一段很重要，改成我图片上的，repo上的地址就是你的GitHub的仓库地址。 这里说一下，博客根目录下的_config.yml文件叫做站点配置文件；而主题目录里的_config.yml文件叫做主题配置文件。 2. 主题配置我用的是Next主题，其风格简约并且功能比较完善，加上时间仓促所以我选择了这个，但是也花了我好多时间来配置完善一些基础功能。还有一些好看的主题如yilia，其实有时间去配置一下，自己的博客看起来会更上一个档次，只能等我以后工作稳定了慢慢去修改了。Next主题下载并解压后，将其放在theme目录里，同时站点配置文件里设置theme: “主题文件夹的名字”,就能切换到相应主题，主题配置文件里可以设置的有很多，就不一一阐述了，讲几个比较偏的。 主题风格切换（共四种） 头像以及博客图标的更改 打赏的二维码 注：要设置的图片均放在主题目录里的/source/images里 这里给出我自己设置好的Next主题文件，该有的基本都有了，其他的留待你自己去完善。 四、绑定域名这一步不是必须的，但是绑定域名便于记忆，如果你不愿意每次进入博客都输入github.io这样长长的二级域名，那就去买一个域名绑定下吧，反正也不是特别贵。我用的GitHub免费送的一年namecheap的.me域名，设置下DNS就可以了。其他的域名绑定设置其他教程里也有。 五、基本操作hexo n “新文章” == hexo new “新文章” #新建文章新建文章，生成md文件，可以用MarkdownPad2进行编辑。 每次修改完文章或主题什么的，进行以下操作：本地预览：hexo cleanhexo generate #简化命令 hexo ghexo server #简化命令 hexo s确认没有需要修改的地方后，上传部署：hexo cleanhexo generate #简化命令 hexo ghexo deploy #简化命令 hexo d其实也可以把指令集合成批处理命令;hexo clean &amp; hexo g &amp; hexo shexo clean &amp; hexo g &amp; hexo d注： 上传部署后，博客并不是马上就能更新的，需要等待一段时间 文章需要加入图片的话，可以用极简图床，免费申请七牛云，注册时有提供教程（身份检核时间挺长的）。 结束语有些东西没有时间详细说了，以后慢慢更新，并且很多博客写得比我好多了，下面给出一些参考文章，都是会用到的东西。 参考文章： 如何在github创建个人博客？ GitHub+Hexo搭建及优化 利用Github免费搭建个人主页(个人博客) Hexo的Next主题详细配置 hexo的next主题个性化教程:打造炫酷网站 【工具】用hexo搭建博客 Hexo | （二）Next主题个性化设置 Hexo | （三）URL优化&amp;站点提交 Hexo | （四）多机同步更新博客]]></content>
      <tags>
        <tag>github</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
